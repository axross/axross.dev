name: Release
on:
  push:
    branches:
      - master
jobs:
  dry-build:
    name: Dry Build
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_VERSION: ${{ github.sha }}
      NEXT_PUBLIC_GRAPHCMS_ENDPOINT: ${{ secrets.E2E_GRAPHCMS_ENDPOINT }}
      NEXT_PUBLIC_SIMPLE_LOCALIZE_TOKEN: ${{ secrets.E2E_SIMPLE_LOCALIZE_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - name: Restore/cache npm packages
        uses: actions/cache@v2
        env:
          cache-name: cache-npm-packages
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install npm packages
        run: npm ci
      - name: Dry Build
        run: npm run build
  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - name: Restore/cache npm packages
        uses: actions/cache@v2
        env:
          cache-name: cache-npm-packages
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install npm packages
        run: npm ci
      - name: Run Unit tests
        run: npm run test:unit -- --ci --verbose --coverage
      - uses: codecov/codecov-action@v1
        with:
          verbose: true
  e2e-test:
    name: E2E Test
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_VERSION: ${{ github.sha }}
      NEXT_PUBLIC_GRAPHCMS_ENDPOINT: ${{ secrets.E2E_GRAPHCMS_ENDPOINT }}
      NEXT_PUBLIC_SIMPLE_LOCALIZE_TOKEN: ${{ secrets.E2E_SIMPLE_LOCALIZE_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - uses: microsoft/playwright-github-action@v1
      - name: Restore/cache npm packages
        uses: actions/cache@v2
        env:
          cache-name: cache-npm-packages
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install npm packages
        run: npm ci
      - name: Run E2E tests
        run: npx start-server-and-test "npm run build && npx next start" "http://localhost:3000" "npm run test:e2e -- --ci --verbose"
  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - dry-build
      - unit-test
      - e2e-test
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - name: Create Vercel Project JSON
        run: mkdir .vercel && echo '${{ secrets.VERCEL_PROJECT_JSON }}' > .vercel/project.json
      - name: Install Semantic Release
        run: npm i semantic-release @semantic-release/exec
      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: npx --no-install semantic-release
