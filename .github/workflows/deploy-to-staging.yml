name: Deploy to Staging
on:
  push:
    branches:
      - master
jobs:
  dry-compile:
    name: Dry Compilation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v1
        with:
          node-version: "13.x"
      - run: npm ci
      - run: npm run dry-compile
  unit-test:
    name: Unit Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v1
        with:
          node-version: "13.x"
      - run: npm ci
      - run: npm run test-unit -- --ci --coverage
  visual-test:
    name: Visual Reguression Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v1
        with:
          node-version: "13.x"
      - run: npm ci
      - run: npm run test-visual -- --ci
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: Visual Regression Test Diffs
          path: storyshots/__image_snapshots__/__diff_output__
  dry-build:
    name: Dry Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v1
        with:
          node-version: "13.x"
      - run: npm ci
      - run: npm run build
        env:
          CONTENTFUL_SPACE: ${{ secrets.CONTENTFUL_SPACE }}
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
      - run: npm run build-storybook
        env:
          CONTENTFUL_SPACE: ${{ secrets.CONTENTFUL_SPACE }}
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
  deploy-staging:
    name: Deploying to Staging Environment
    needs: [dry-compile, unit-test, visual-test, dry-build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v1
        with:
          node-version: "10.x"
      - run: npm ci
      - run:
          $(npm bin)/now
            --token $NOW_TOKEN
            --name $NOW_NAME
            --env ORIGIN=$ORIGIN
            --env CONTENTFUL_SPACE=$CONTENTFUL_SPACE
            --env CONTENTFUL_ACCESS_TOKEN=$CONTENTFUL_ACCESS_TOKEN
            --build-env ORIGIN=$ORIGIN
            --build-env CONTENTFUL_SPACE=$CONTENTFUL_SPACE
            --build-env CONTENTFUL_ACCESS_TOKEN=$CONTENTFUL_ACCESS_TOKEN
            --no-clipboard
            .
        env:
          NOW_TOKEN: ${{ secrets.NOW_TOKEN }}
          NOW_NAME: ${{ secrets.NOW_NAME }}
          ORIGIN: ${{ secrets.ORIGIN }}
          CONTENTFUL_SPACE: ${{ secrets.CONTENTFUL_SPACE }}
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
