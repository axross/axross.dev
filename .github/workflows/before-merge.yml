name: Before Merge
on:
  - pull_request
jobs:
  dry-build:
    name: Dry Build
    runs-on: ubuntu-latest
    environment: GitHub Actions Dry Build
    env:
      NEXT_PUBLIC_VERSION: ${{ github.sha }}
      NEXT_PUBLIC_RELEASE_STAGE: ${{ secrets.NEXT_PUBLIC_RELEASE_STAGE }}
      NEXT_PUBLIC_SELF_ORIGIN: ${{ secrets.NEXT_PUBLIC_SELF_ORIGIN }}
      NEXT_PUBLIC_SIMPLE_LOCALIZE_TOKEN: ${{ secrets.NEXT_PUBLIC_SIMPLE_LOCALIZE_TOKEN }}
      GITHUB_CONTENT_REPO: ${{ secrets._GITHUB_CONTENT_REPO }}
      GITHUB_ACCESS_TOKEN: ${{ secrets._GITHUB_ACCESS_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - name: Restore/cache npm packages
        uses: actions/cache@v2
        env:
          cache-name: cache-npm-packages
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install npm packages
        run: npm ci
      - name: Dry Build
        run: npm run build
  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
    environment: GitHub Actions Unit Test
    env:
      NEXT_PUBLIC_VERSION: ${{ github.sha }}
      NEXT_PUBLIC_RELEASE_STAGE: ${{ secrets.NEXT_PUBLIC_RELEASE_STAGE }}
      NEXT_PUBLIC_SELF_ORIGIN: ${{ secrets.NEXT_PUBLIC_SELF_ORIGIN }}
      NEXT_PUBLIC_SIMPLE_LOCALIZE_TOKEN: ${{ secrets.NEXT_PUBLIC_SIMPLE_LOCALIZE_TOKEN }}
      GITHUB_CONTENT_REPO: ${{ secrets._GITHUB_CONTENT_REPO }}
      GITHUB_ACCESS_TOKEN: ${{ secrets._GITHUB_ACCESS_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - name: Restore/cache npm packages
        uses: actions/cache@v2
        env:
          cache-name: cache-npm-packages
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install npm packages
        run: npm ci
      - name: Run Unit tests
        run: npm run test:unit -- --ci --verbose --coverage
      - uses: codecov/codecov-action@v1
        with:
          verbose: true
  e2e-test:
    name: E2E Test
    runs-on: ubuntu-latest
    environment: GitHub Actions E2E Test
    env:
      NEXT_PUBLIC_VERSION: ${{ github.sha }}
      NEXT_PUBLIC_RELEASE_STAGE: ${{ secrets.NEXT_PUBLIC_RELEASE_STAGE }}
      NEXT_PUBLIC_SELF_ORIGIN: ${{ secrets.NEXT_PUBLIC_SELF_ORIGIN }}
      NEXT_PUBLIC_SIMPLE_LOCALIZE_TOKEN: ${{ secrets.NEXT_PUBLIC_SIMPLE_LOCALIZE_TOKEN }}
      GITHUB_CONTENT_REPO: ${{ secrets._GITHUB_CONTENT_REPO }}
      GITHUB_ACCESS_TOKEN: ${{ secrets._GITHUB_ACCESS_TOKEN }}
      E2E_TEST_TARGET_ORIGIN: ${{ secrets.E2E_TEST_TARGET_ORIGIN }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - uses: microsoft/playwright-github-action@v1
      - name: Restore/cache npm packages
        uses: actions/cache@v2
        env:
          cache-name: cache-npm-packages
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install npm packages
        run: npm ci
      - name: Run E2E tests
        run: npx start-server-and-test "npm run build && npx next start" "http://localhost:3000" "npm run test:e2e -- --ci --verbose"
