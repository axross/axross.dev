version: 2
general_options: &general_options
  docker:
    - image: circleci/node:12
  working_directory: ~/repo
jobs:
  checkout:
    <<: *general_options
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies
          command: npm ci
      - save_cache:
          key: v1-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: ~/repo
          paths:
            - .
  dry-compile:
    <<: *general_options
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Compile dryly
          command: npx -p typescript@3 tsc --noEmit
  dry-build:
    <<: *general_options
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Install Next.js CLI
          command: npm i --no-save next@9
      - run:
          name: Build dryly
          command: npx --no-install next build
          environment:
            CONTENTFUL_SPACE: $CONTENTFUL_SPACE
            CONTENTFUL_ACCESS_TOKEN: $CONTENTFUL_ACCESS_TOKEN
  test:
    <<: *general_options
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Test
          command: npm test
  deploy-staging:
    <<: *general_options
    steps:
      - attach_workspace:
          at: ~/repo
      - deploy:
          name: Deploy to staging
          command: npx -p now@16.3.1 now --token $NOW_TOKEN --name $NOW_NAME_STAGING --target production -b CONTENTFUL_SPACE=$CONTENTFUL_SPACE -b CONTENTFUL_ACCESS_TOKEN=$CONTENTFUL_ACCESS_TOKEN .
  deploy-production:
    <<: *general_options
    steps:
      - attach_workspace:
          at: ~/repo
      - deploy:
          name: Deploy to production
          command: npx -p now@16.3.1 now --token $NOW_TOKEN --name $NOW_NAME_PRODUCTION --target production -b CONTENTFUL_SPACE=$CONTENTFUL_SPACE -b CONTENTFUL_ACCESS_TOKEN=$CONTENTFUL_ACCESS_TOKEN .
workflows:
  version: 2
  default:
    jobs:
      - checkout
      - dry-compile:
          requires:
            - checkout
      - dry-build:
          requires:
            - checkout
      - test:
          requires:
            - checkout
      - deploy-staging:
          filters:
            branches:
              only: master
          requires:
            - dry-compile
            - dry-build
            - test
      - hold-deploy-production:
          type: approval
          filters:
            branches:
              only: master
          requires:
            - deploy-staging
      - deploy-production:
          filters:
            branches:
              only: master
          requires:
            - hold-deploy-production
